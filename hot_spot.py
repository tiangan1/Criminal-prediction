# -*- coding: utf-8 -*-
"""HOT SPOT.ipynb

Automatically generated by Colaboratory.

# HOT SPOT
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
data = pd.read_csv('/content/drive/My Drive/Colab Notebooks/Criminal_Prediction/NYPD_Complaint_Sample_Data.csv')
data = data.drop(columns=['Unnamed: 0'])
print('We have total {} observations and {} variables.'.format(data.shape[0], data.shape[1]))

rename_dic = {'CMPLNT_NUM':'COMPLAINT_NUMBER','CMPLNT_FR_DT':'COMPLAINT_FROM_DATE','CMPLNT_FR_TM':'COMPLAINT_FROM_TIME',
              'CMPLNT_TO_DT':'COMPLAINT_TO_DATE','CMPLNT_TO_TM':'COMPLAINT_TO_TIME',
              'ADDR_PCT_CD' : 'ADDRESS_PRECINCT_CODE','RPT_DT' : 'REPORT_DT',
              'KY_CD' : 'OFFENSE_CLASS_CODE', 'OFNS_DESC':'OFFENSE_DESCRIBE',
              'PD_CD' : 'INTERNAL_CLASS_CODE','PD_DESC':'INTERNAL_DESCRIBE',
              'CRM_ATPT_CPTD_CD':'CRIME_ATTEMPT_COMPLETED_CODE','LAW_CAT_CD' : 'LEVEL_OF_OFFENSE',
              'BORO_NM':'BOROUGH_NAME','LOC_OF_OCCUR_DESC':'LOCATION_OF_OCCURRENCE_DESCRIBE',
              'PREM_TYP_DESC':'PREMIUM_TYPE_DESCRIBE','JURIS_DESC':'JURISDICTION_DESCRIBE',
              'PARKS_NM':'PARKS_NAME','HOUSING_PSA':'HOUSING_POLICE_SERVICE_AREA',
              'X_COORD_CD':'X_COORDINATE_CODE','Y_COORD_CD':'Y_COORDINATE_CODE',
              'SUSP_AGE_GROUP':'SUSPECT_AGE_GROUP','SUSP_RACE':'SUSPECT_RACE','SUSP_SEX':'SUSPECT_SEX',
              'PATROL_BORO':'PATROL_BOROUGH','VIC_AGE_GROUP':'VICTIM_AGE_GROUP','VIC_RACE':'VICTIM_RACE','VIC_SEX':'VICTIM_SEX',}

data= data.rename(columns = rename_dic).iloc[:,0:]
data.COMPLAINT_FROM_TIME = pd.to_datetime(data.COMPLAINT_FROM_TIME, format='%H:%M:%S')
type(data.COMPLAINT_FROM_TIME[0])
data.COMPLAINT_FROM_DATE = pd.to_datetime(data.COMPLAINT_FROM_DATE, format='%Y-%m-%d')
type(data.COMPLAINT_FROM_DATE[0])
data

data = data.drop(columns=['PARKS_NAME', 'HADEVELOPT','X_COORDINATE_CODE','Y_COORDINATE_CODE', 
                          'HOUSING_POLICE_SERVICE_AREA', 'TRANSIT_DISTRICT','COMPLAINT_NUMBER',
                          'STATION_NAME', 'Lat_Lon', 'LOCATION_OF_OCCURRENCE_DESCRIBE',
                          'COMPLAINT_TO_DATE', 'COMPLAINT_TO_TIME','PATROL_BOROUGH',
                          'REPORT_DT','OFFENSE_DESCRIBE','INTERNAL_DESCRIBE','CRIME_ATTEMPT_COMPLETED_CODE',
                          'PREMIUM_TYPE_DESCRIBE','JURISDICTION_DESCRIBE','JURISDICTION_CODE']).dropna().reset_index(drop=True)
for i in data.columns:
    data = data[data[i] != 'UNKNOWN']
data = data.reset_index(drop=True)
data

crime = data[data.LEVEL_OF_OFFENSE!= 'VIOLATION'].reset_index(drop=True)
crime

crime = crime.dropna(subset=['Latitude','Longitude'])

crime

count=crime.ADDRESS_PRECINCT_CODE.value_counts().sort_index()

df=crime.loc[:,['ADDRESS_PRECINCT_CODE','Latitude','Longitude']].sample(n=5000, random_state=45)

df

df['ADDRESS_PRECINCT_CODE'].mean()

count1=df.ADDRESS_PRECINCT_CODE.value_counts().sort_index()

hot_spot=count1[count1>df['ADDRESS_PRECINCT_CODE'].mean()]

df2=pd.DataFrame(hot_spot)

df2

# Mapping with folium - works good for 1k not for 100k

locations = crime[['Latitude', 'Longitude']]
locationlist = locations.values.tolist()

#Import maps
import folium
from folium import plugins

crime_map = folium.Map(location=[40.6865,-73.9496], 
                       tiles='Stamen Terrain', zoom_start=10)


marker_cluster = plugins.MarkerCluster().add_to(crime_map)

#I don`t know how to add a popup station`s name imported from 
    #df_stations['start_station_name'] column, ordinary solution doesn't work :/
# parse_html=True - this is the solution
#folium.Cricle(locationlist[point],radius=40).add_to(marker_cluster)
for point in range(0, len(crime[0:5000])):
    folium.Marker(locationlist[point],
                  popup=folium.Popup(crime['BOROUGH_NAME'][point], 
                                     parse_html=True),
                  icon=folium.Icon(color='blue', icon_color='white', 
                                   icon='fa-circle', angle=0, 
                                   prefix='fa')).add_to(marker_cluster)
folium.Circle(locationlist[point],radius=1600).add_to(marker_cluster)
crime_map

# Mapping with folium - works good for 1k not for 100k

locations = crime[['Latitude', 'Longitude']]
locationlist = locations.values.tolist()

#Import maps
import folium
from folium import plugins

crime_map = folium.Map(location=[40.6865,-73.9496], 
                       tiles='Stamen Terrain', zoom_start=10)


marker_cluster = plugins.MarkerCluster().add_to(crime_map)

#I don`t know how to add a popup station`s name imported from 
    #df_stations['start_station_name'] column, ordinary solution doesn't work :/
# parse_html=True - this is the solution
#folium.Circle(locationlist[point],radius=40).add_to(marker_cluster)
for point in range(0, len(crime[0:5000])):
    folium.Marker(locationlist[point],
                  popup=folium.Popup(crime['BOROUGH_NAME'][point], 
                                     parse_html=True),
                  icon=folium.Icon(color='blue', icon_color='white', 
                                   icon='fa-circle', angle=0, 
                                   prefix='fa')).add_to(marker_cluster)
folium.Circle(locationlist[point],radius=800).add_to(marker_cluster)
crime_map

# Mapping with folium - works good for 1k not for 100k

locations = crime[['Latitude', 'Longitude']]
locationlist = locations.values.tolist()

#Import maps
import folium
from folium import plugins

crime_map = folium.Map(location=[40.6865,-73.9496], 
                       tiles='Stamen Terrain', zoom_start=10)


marker_cluster = plugins.MarkerCluster().add_to(crime_map)

#I don`t know how to add a popup station`s name imported from 
    #df_stations['start_station_name'] column, ordinary solution doesn't work :/
# parse_html=True - this is the solution
#folium.Circle(locationlist[point],radius=40).add_to(marker_cluster)
for point in range(0, len(crime[0:5000])):
    folium.Marker(locationlist[point],
                  popup=folium.Popup(crime['BOROUGH_NAME'][point], 
                                     parse_html=True),
                  icon=folium.Icon(color='blue', icon_color='white', 
                                   icon='fa-circle', angle=0, 
                                  prefix='fa')).add_to(marker_cluster)
    folium.Circle(locationlist[point],radius=400).add_to(marker_cluster)
crime_map

# Mapping with folium - works good for 1k not for 100k

locations = crime[['Latitude', 'Longitude']]
locationlist = locations.values.tolist()

#Import maps
import folium
from folium import plugins

crime_map = folium.Map(location=[40.6865,-73.9496], 
                       tiles='Stamen Terrain', zoom_start=10)


marker_cluster = plugins.MarkerCluster().add_to(crime_map)

#I don`t know how to add a popup station`s name imported from 
    #df_stations['start_station_name'] column, ordinary solution doesn't work :/
# parse_html=True - this is the solution
#folium.Circle(locationlist[point],radius=40).add_to(marker_cluster)
for point in range(0, len(crime[0:5000])):
    folium.Marker(locationlist[point],
                  popup=folium.Popup(crime['BOROUGH_NAME'][point], 
                                     parse_html=True),
                  icon=folium.Icon(color='blue', icon_color='white', 
                                   icon='fa-circle', angle=0, 
                                  prefix='fa')).add_to(marker_cluster)
    folium.Circle(locationlist[point],radius=200).add_to(marker_cluster)
crime_map

# Mapping with folium - works good for 1k not for 100k

locations = crime[['Latitude', 'Longitude']]
locationlist = locations.values.tolist()

#Import maps
import folium
from folium import plugins

crime_map = folium.Map(location=[40.6865,-73.9496], 
                       tiles='Stamen Terrain', zoom_start=10)


marker_cluster = plugins.MarkerCluster().add_to(crime_map)

#I don`t know how to add a popup station`s name imported from 
    #df_stations['start_station_name'] column, ordinary solution doesn't work :/
# parse_html=True - this is the solution
#folium.Circle(locationlist[point],radius=40).add_to(marker_cluster)
for point in range(0, len(crime[0:5000])):
    folium.Marker(locationlist[point],
                  popup=folium.Popup(crime['BOROUGH_NAME'][point], 
                                     parse_html=True),
                  icon=folium.Icon(color='blue', icon_color='white', 
                                   icon='fa-circle', angle=0, 
                                  prefix='fa')).add_to(marker_cluster)
    folium.Circle(locationlist[point],radius=100).add_to(marker_cluster)
crime_map

# Find FIPS code by lat and long
from urllib.request import Request, urlopen

lat = 40.84348675
long_ = -73.62581450092935
url = "https://geo.fcc.gov/api/census/block/find?latitude=" + str(lat) + "&longitude="+ str(long_) +"&format=xml"
request = Request(url)
html = urlopen(request)
data = html.read()
data = str(data)
start = data.find('FIPS')
FIPS_code = data[start+6:start+21]

FIPS_code

from  geopy.geocoders import Nominatim
geolocator = Nominatim()
city ="Freeport, New York"
country ="US"
loc = geolocator.geocode(city+','+ country)
print("latitude is : " ,loc.latitude,"\nlongtitude is: " ,loc.longitude)

